/*
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package com.uber.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Product type.
 */
public class Product {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String productId;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String description;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String displayName;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer capacity;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String image;

    /**
     * Default constructor.
     */
    public Product() {
    }

    /**
     * Initialization constructor.
     * @param  productId  String value for productId.
     * @param  description  String value for description.
     * @param  displayName  String value for displayName.
     * @param  capacity  Integer value for capacity.
     * @param  image  String value for image.
     */
    public Product(
            String productId,
            String description,
            String displayName,
            Integer capacity,
            String image) {
        this.productId = productId;
        this.description = description;
        this.displayName = displayName;
        this.capacity = capacity;
        this.image = image;
    }

    /**
     * Getter for ProductId.
     * Unique identifier representing a specific product for a given latitude & longitude. For
     * example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
     * @return Returns the String
     */
    @JsonGetter("product_id")
    public String getProductId() {
        return productId;
    }

    /**
     * Setter for ProductId.
     * Unique identifier representing a specific product for a given latitude & longitude. For
     * example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
     * @param productId Value for String
     */
    @JsonSetter("product_id")
    public void setProductId(String productId) {
        this.productId = productId;
    }

    /**
     * Getter for Description.
     * Description of product.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Description of product.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for DisplayName.
     * Display name of product.
     * @return Returns the String
     */
    @JsonGetter("display_name")
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Setter for DisplayName.
     * Display name of product.
     * @param displayName Value for String
     */
    @JsonSetter("display_name")
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    /**
     * Getter for Capacity.
     * Capacity of product. For example, 4 people.
     * @return Returns the Integer
     */
    @JsonGetter("capacity")
    public Integer getCapacity() {
        return capacity;
    }

    /**
     * Setter for Capacity.
     * Capacity of product. For example, 4 people.
     * @param capacity Value for Integer
     */
    @JsonSetter("capacity")
    public void setCapacity(Integer capacity) {
        this.capacity = capacity;
    }

    /**
     * Getter for Image.
     * Image URL representing the product.
     * @return Returns the String
     */
    @JsonGetter("image")
    public String getImage() {
        return image;
    }

    /**
     * Setter for Image.
     * Image URL representing the product.
     * @param image Value for String
     */
    @JsonSetter("image")
    public void setImage(String image) {
        this.image = image;
    }

    /**
     * Converts this Product into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Product [" + "productId=" + productId + ", description=" + description
                + ", displayName=" + displayName + ", capacity=" + capacity + ", image=" + image
                + "]";
    }

    /**
     * Builds a new {@link Product.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Product.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .productId(getProductId())
                .description(getDescription())
                .displayName(getDisplayName())
                .capacity(getCapacity())
                .image(getImage());
        return builder;
    }

    /**
     * Class to build instances of {@link Product}.
     */
    public static class Builder {
        private String productId;
        private String description;
        private String displayName;
        private Integer capacity;
        private String image;



        /**
         * Setter for productId.
         * @param  productId  String value for productId.
         * @return Builder
         */
        public Builder productId(String productId) {
            this.productId = productId;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for displayName.
         * @param  displayName  String value for displayName.
         * @return Builder
         */
        public Builder displayName(String displayName) {
            this.displayName = displayName;
            return this;
        }

        /**
         * Setter for capacity.
         * @param  capacity  Integer value for capacity.
         * @return Builder
         */
        public Builder capacity(Integer capacity) {
            this.capacity = capacity;
            return this;
        }

        /**
         * Setter for image.
         * @param  image  String value for image.
         * @return Builder
         */
        public Builder image(String image) {
            this.image = image;
            return this;
        }

        /**
         * Builds a new {@link Product} object using the set fields.
         * @return {@link Product}
         */
        public Product build() {
            return new Product(productId, description, displayName, capacity, image);
        }
    }
}
