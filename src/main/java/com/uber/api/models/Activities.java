/*
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package com.uber.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Activities type.
 */
public class Activities {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer offset;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer limit;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Integer count;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private List<Activity> history;

    /**
     * Default constructor.
     */
    public Activities() {
    }

    /**
     * Initialization constructor.
     * @param  offset  Integer value for offset.
     * @param  limit  Integer value for limit.
     * @param  count  Integer value for count.
     * @param  history  List of Activity value for history.
     */
    public Activities(
            Integer offset,
            Integer limit,
            Integer count,
            List<Activity> history) {
        this.offset = offset;
        this.limit = limit;
        this.count = count;
        this.history = history;
    }

    /**
     * Getter for Offset.
     * Position in pagination.
     * @return Returns the Integer
     */
    @JsonGetter("offset")
    public Integer getOffset() {
        return offset;
    }

    /**
     * Setter for Offset.
     * Position in pagination.
     * @param offset Value for Integer
     */
    @JsonSetter("offset")
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * Getter for Limit.
     * Number of items to retrieve (100 max).
     * @return Returns the Integer
     */
    @JsonGetter("limit")
    public Integer getLimit() {
        return limit;
    }

    /**
     * Setter for Limit.
     * Number of items to retrieve (100 max).
     * @param limit Value for Integer
     */
    @JsonSetter("limit")
    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    /**
     * Getter for Count.
     * Total number of items available.
     * @return Returns the Integer
     */
    @JsonGetter("count")
    public Integer getCount() {
        return count;
    }

    /**
     * Setter for Count.
     * Total number of items available.
     * @param count Value for Integer
     */
    @JsonSetter("count")
    public void setCount(Integer count) {
        this.count = count;
    }

    /**
     * Getter for History.
     * @return Returns the List of Activity
     */
    @JsonGetter("history")
    public List<Activity> getHistory() {
        return history;
    }

    /**
     * Setter for History.
     * @param history Value for List of Activity
     */
    @JsonSetter("history")
    public void setHistory(List<Activity> history) {
        this.history = history;
    }

    /**
     * Converts this Activities into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Activities [" + "offset=" + offset + ", limit=" + limit + ", count=" + count
                + ", history=" + history + "]";
    }

    /**
     * Builds a new {@link Activities.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Activities.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .offset(getOffset())
                .limit(getLimit())
                .count(getCount())
                .history(getHistory());
        return builder;
    }

    /**
     * Class to build instances of {@link Activities}.
     */
    public static class Builder {
        private Integer offset;
        private Integer limit;
        private Integer count;
        private List<Activity> history;



        /**
         * Setter for offset.
         * @param  offset  Integer value for offset.
         * @return Builder
         */
        public Builder offset(Integer offset) {
            this.offset = offset;
            return this;
        }

        /**
         * Setter for limit.
         * @param  limit  Integer value for limit.
         * @return Builder
         */
        public Builder limit(Integer limit) {
            this.limit = limit;
            return this;
        }

        /**
         * Setter for count.
         * @param  count  Integer value for count.
         * @return Builder
         */
        public Builder count(Integer count) {
            this.count = count;
            return this;
        }

        /**
         * Setter for history.
         * @param  history  List of Activity value for history.
         * @return Builder
         */
        public Builder history(List<Activity> history) {
            this.history = history;
            return this;
        }

        /**
         * Builds a new {@link Activities} object using the set fields.
         * @return {@link Activities}
         */
        public Activities build() {
            return new Activities(offset, limit, count, history);
        }
    }
}
