/*
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package com.uber.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for PriceEstimate type.
 */
public class PriceEstimate {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String productId;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String currencyCode;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String displayName;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String estimate;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double lowEstimate;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double highEstimate;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Double surgeMultiplier;

    /**
     * Default constructor.
     */
    public PriceEstimate() {
    }

    /**
     * Initialization constructor.
     * @param  productId  String value for productId.
     * @param  currencyCode  String value for currencyCode.
     * @param  displayName  String value for displayName.
     * @param  estimate  String value for estimate.
     * @param  lowEstimate  Double value for lowEstimate.
     * @param  highEstimate  Double value for highEstimate.
     * @param  surgeMultiplier  Double value for surgeMultiplier.
     */
    public PriceEstimate(
            String productId,
            String currencyCode,
            String displayName,
            String estimate,
            Double lowEstimate,
            Double highEstimate,
            Double surgeMultiplier) {
        this.productId = productId;
        this.currencyCode = currencyCode;
        this.displayName = displayName;
        this.estimate = estimate;
        this.lowEstimate = lowEstimate;
        this.highEstimate = highEstimate;
        this.surgeMultiplier = surgeMultiplier;
    }

    /**
     * Getter for ProductId.
     * Unique identifier representing a specific product for a given latitude & longitude. For
     * example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
     * @return Returns the String
     */
    @JsonGetter("product_id")
    public String getProductId() {
        return productId;
    }

    /**
     * Setter for ProductId.
     * Unique identifier representing a specific product for a given latitude & longitude. For
     * example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
     * @param productId Value for String
     */
    @JsonSetter("product_id")
    public void setProductId(String productId) {
        this.productId = productId;
    }

    /**
     * Getter for CurrencyCode.
     * [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.
     * @return Returns the String
     */
    @JsonGetter("currency_code")
    public String getCurrencyCode() {
        return currencyCode;
    }

    /**
     * Setter for CurrencyCode.
     * [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.
     * @param currencyCode Value for String
     */
    @JsonSetter("currency_code")
    public void setCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
    }

    /**
     * Getter for DisplayName.
     * Display name of product.
     * @return Returns the String
     */
    @JsonGetter("display_name")
    public String getDisplayName() {
        return displayName;
    }

    /**
     * Setter for DisplayName.
     * Display name of product.
     * @param displayName Value for String
     */
    @JsonSetter("display_name")
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    /**
     * Getter for Estimate.
     * Formatted string of estimate in local currency of the start location. Estimate could be a
     * range, a single number (flat rate) or "Metered" for TAXI.
     * @return Returns the String
     */
    @JsonGetter("estimate")
    public String getEstimate() {
        return estimate;
    }

    /**
     * Setter for Estimate.
     * Formatted string of estimate in local currency of the start location. Estimate could be a
     * range, a single number (flat rate) or "Metered" for TAXI.
     * @param estimate Value for String
     */
    @JsonSetter("estimate")
    public void setEstimate(String estimate) {
        this.estimate = estimate;
    }

    /**
     * Getter for LowEstimate.
     * Lower bound of the estimated price.
     * @return Returns the Double
     */
    @JsonGetter("low_estimate")
    public Double getLowEstimate() {
        return lowEstimate;
    }

    /**
     * Setter for LowEstimate.
     * Lower bound of the estimated price.
     * @param lowEstimate Value for Double
     */
    @JsonSetter("low_estimate")
    public void setLowEstimate(Double lowEstimate) {
        this.lowEstimate = lowEstimate;
    }

    /**
     * Getter for HighEstimate.
     * Upper bound of the estimated price.
     * @return Returns the Double
     */
    @JsonGetter("high_estimate")
    public Double getHighEstimate() {
        return highEstimate;
    }

    /**
     * Setter for HighEstimate.
     * Upper bound of the estimated price.
     * @param highEstimate Value for Double
     */
    @JsonSetter("high_estimate")
    public void setHighEstimate(Double highEstimate) {
        this.highEstimate = highEstimate;
    }

    /**
     * Getter for SurgeMultiplier.
     * Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price
     * estimate already factors in the surge multiplier.
     * @return Returns the Double
     */
    @JsonGetter("surge_multiplier")
    public Double getSurgeMultiplier() {
        return surgeMultiplier;
    }

    /**
     * Setter for SurgeMultiplier.
     * Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price
     * estimate already factors in the surge multiplier.
     * @param surgeMultiplier Value for Double
     */
    @JsonSetter("surge_multiplier")
    public void setSurgeMultiplier(Double surgeMultiplier) {
        this.surgeMultiplier = surgeMultiplier;
    }

    /**
     * Converts this PriceEstimate into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PriceEstimate [" + "productId=" + productId + ", currencyCode=" + currencyCode
                + ", displayName=" + displayName + ", estimate=" + estimate + ", lowEstimate="
                + lowEstimate + ", highEstimate=" + highEstimate + ", surgeMultiplier="
                + surgeMultiplier + "]";
    }

    /**
     * Builds a new {@link PriceEstimate.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PriceEstimate.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .productId(getProductId())
                .currencyCode(getCurrencyCode())
                .displayName(getDisplayName())
                .estimate(getEstimate())
                .lowEstimate(getLowEstimate())
                .highEstimate(getHighEstimate())
                .surgeMultiplier(getSurgeMultiplier());
        return builder;
    }

    /**
     * Class to build instances of {@link PriceEstimate}.
     */
    public static class Builder {
        private String productId;
        private String currencyCode;
        private String displayName;
        private String estimate;
        private Double lowEstimate;
        private Double highEstimate;
        private Double surgeMultiplier;



        /**
         * Setter for productId.
         * @param  productId  String value for productId.
         * @return Builder
         */
        public Builder productId(String productId) {
            this.productId = productId;
            return this;
        }

        /**
         * Setter for currencyCode.
         * @param  currencyCode  String value for currencyCode.
         * @return Builder
         */
        public Builder currencyCode(String currencyCode) {
            this.currencyCode = currencyCode;
            return this;
        }

        /**
         * Setter for displayName.
         * @param  displayName  String value for displayName.
         * @return Builder
         */
        public Builder displayName(String displayName) {
            this.displayName = displayName;
            return this;
        }

        /**
         * Setter for estimate.
         * @param  estimate  String value for estimate.
         * @return Builder
         */
        public Builder estimate(String estimate) {
            this.estimate = estimate;
            return this;
        }

        /**
         * Setter for lowEstimate.
         * @param  lowEstimate  Double value for lowEstimate.
         * @return Builder
         */
        public Builder lowEstimate(Double lowEstimate) {
            this.lowEstimate = lowEstimate;
            return this;
        }

        /**
         * Setter for highEstimate.
         * @param  highEstimate  Double value for highEstimate.
         * @return Builder
         */
        public Builder highEstimate(Double highEstimate) {
            this.highEstimate = highEstimate;
            return this;
        }

        /**
         * Setter for surgeMultiplier.
         * @param  surgeMultiplier  Double value for surgeMultiplier.
         * @return Builder
         */
        public Builder surgeMultiplier(Double surgeMultiplier) {
            this.surgeMultiplier = surgeMultiplier;
            return this;
        }

        /**
         * Builds a new {@link PriceEstimate} object using the set fields.
         * @return {@link PriceEstimate}
         */
        public PriceEstimate build() {
            return new PriceEstimate(productId, currencyCode, displayName, estimate, lowEstimate,
                    highEstimate, surgeMultiplier);
        }
    }
}
