/*
 * UberAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package com.uber.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for ProductList type.
 */
public class ProductList {
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private List<Product> products;

    /**
     * Default constructor.
     */
    public ProductList() {
    }

    /**
     * Initialization constructor.
     * @param  products  List of Product value for products.
     */
    public ProductList(
            List<Product> products) {
        this.products = products;
    }

    /**
     * Getter for Products.
     * Contains the list of products
     * @return Returns the List of Product
     */
    @JsonGetter("products")
    public List<Product> getProducts() {
        return products;
    }

    /**
     * Setter for Products.
     * Contains the list of products
     * @param products Value for List of Product
     */
    @JsonSetter("products")
    public void setProducts(List<Product> products) {
        this.products = products;
    }

    /**
     * Converts this ProductList into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ProductList [" + "products=" + products + "]";
    }

    /**
     * Builds a new {@link ProductList.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ProductList.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .products(getProducts());
        return builder;
    }

    /**
     * Class to build instances of {@link ProductList}.
     */
    public static class Builder {
        private List<Product> products;



        /**
         * Setter for products.
         * @param  products  List of Product value for products.
         * @return Builder
         */
        public Builder products(List<Product> products) {
            this.products = products;
            return this;
        }

        /**
         * Builds a new {@link ProductList} object using the set fields.
         * @return {@link ProductList}
         */
        public ProductList build() {
            return new ProductList(products);
        }
    }
}
